version: 2.1

workflows:
  main:
    jobs:
      - build
      - scan:
          context: SonarCloud

jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.14-alpine

    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - checkout

      # setup and dep fetches
      - run: |
          # install Cue
          # curl -LO https://github.com/cuelang/cue/releases/download/v0.2.0/cue_0.2.0_Linux_x86_64.tar.gz
          # tar -xf cue_0.2.0_Linux_x86_64.tar.gz
          # sudo mv cue /usr/local/bin/cue

          # fetch deps
          go mod vendor

      # This seems backwards, we ought to test, but...
      - run: |
          # build hof
          echo "building cli"
          go build -o hof cmd/hof/main.go
          sudo mv hof /usr/local/bin/hof

      # Hof has a built in test command to facilitate running tests
      # en masse, regardless of the language, technology, or framework
      # you can also script all of the processes that go around a
      # complete testing setup with tasks like collectiong and reporting coverage statistics
      - run: |
          # run all tests
          hof test test.cue

  scan:
    machine: true

    steps:
      # Debug stip
      - run: |
          echo "------  root dir   ------"
          ls -lh .
          echo "------  sonar dir  ------"
          ls -lh sonar-reports
          echo "------  end debug  ------"

      # Build our custom image
      - run: |
          # build our own sonar container
          ./ci/sc/build.sh

      # Upload reports now that they have been generated and collected
      - run: |
          # run our own sonar containers
          ./ci/sc/run.sh

      # Scan and upload reports
      # - sonarcloud/scan

#orbs:
  #sonarcloud: sonarsource/sonarcloud@1.0.1
