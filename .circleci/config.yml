version: 2.1

workflows:
  main:
    jobs:
      - hof_ci:
          context: SonarCloud

jobs:

  # Build and test hof, in that order!
  hof_ci:
    machine: true

    steps:
      - checkout

      # setup and prep fetch
      - run: |
          # Version info
          GO_VER=1.14.4
          CUE_VER=0.2.0

          # Cleaup
          sudo apt-get remove --purge -y golang

          # Install Go
          curl -LO https://dl.google.com/go/go${GO_VER}.linux-amd64.tar.gz
          sudo tar -C /usr/local -xzf go${G)_VER}.linux-amd64.tar.gz
          echo "PATH=/usr/local/go/bin:$PATH" >> $HOME/.profile

          # Install Cue
          curl -LO https://github.com/cuelang/cue/releases/download/v${CUE_VER}/cue_${CUE_VER}_Linux_x86_64.tar.gz
          tar -xf cue_${CUE_VER}_Linux_x86_64.tar.gz
          sudo mv cue /usr/local/bin/cue


      # fetch Go dependencies
      - run: |
          go mod vendor

      # build Hof cli
      - run: |
          go build -o hof cmd/hof/main.go

      # fetch Cue dependencies
      - run: |
          ./hof mod vendor cue

      # Hof has a built in test command to facilitate running tests
      # en masse, regardless of the language, technology, or framework
      # you can also script all of the processes that go around a
      # complete testing setup with tasks like collectiong and reporting coverage statistics
      - run: |
          # run all tests
          ./hof test test.cue

          # TODO, temp hack until tests are actually running
          mkdir -p sonar-reports/go

      # Debug step
      - run: |
          echo "------  root dir   ------"
          ls -lh .
          echo "------  sonar dir  ------"
          ls -lh sonar-reports
          echo "------  end debug  ------"

      # Build our custom SonarCloud image
      - run: |
          ./ci/sc/build.sh

      # Upload reports now that they have been generated and collected
      - run: |
          ./ci/sc/run.sh

